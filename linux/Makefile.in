# =========================================================================
#                    Autogenerated from Makefile.in
# =========================================================================

# Package version
MAJOR_VERSION=@MAJOR_VERSION@
MINOR_VERSION=@MINOR_VERSION@
RELEASE_VERSION=@RELEASE_VERSION@
BUILD_VERSION=@BUILD_VERSION@
PACKAGE_VERSION=@PACKAGE_VERSION@

# STATIC = yes if a static build is requested.
STATIC=@STATIC@
VSCP_PROJ_BASE_DIR=@DESTDIR@
DESTDIR=@DESTDIR@

# Library version
LIB_MAJOR_VERSION = @MAJOR_VERSION@
LIB_MINOR_VERSION = @MINOR_VERSION@
LIB_RELEASE_VERSION = @RELEASE_VERSION@

# STATIC = yes if a static build is requested.
STATIC=@STATIC@
VSCP_PROJ_BASE_DIR=@VSCPDIR@


prefix = @prefix@
exec_prefix = @exec_prefix@
STRIP = strip
INSTALL = @INSTALL@
top_srcdir = @top_srcdir@
top_builddir = @top_builddir@

CC = @CC@
CXX = @CXX@

CFLAGS = -std=c11 -shared -fPIC -D__LINUX__ @CFLAGS@  -DCBC -I. -I..
CXXFLAGS = -std=c++11 -shared -fPIC  @CXXFLAGS@
CPPFLAGS = -shared -fPIC @CPPFLAGS@ -fno-var-tracking-assignments -I. -I.. -I_vscp_common -I_vscp_common_general 

LDFLAGS = @LDFLAGS@
EXTRALIBS = @EXTRALIBS@


DLFLAGS = -g -shared -fPIC
STRIP = strip
INSTALL_PROGRAM = ${INSTALL}
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_DIR = /usr/bin/install -c -d
srcdir = .
top_srcdir = .
top_builddir =
bindir = ${exec_prefix}/bin
libdir = ${exec_prefix}/lib
datadir = ${prefix}/share
includedir = ${prefix}/include
DLLPREFIX = lib


LIB_PLUS_VER = "libvscphelper.so.$(LIB_MAJOR_VERSION).$(LIB_MINOR_VERSION).$(LIB_RELEASE_VERSION)"
LIB_SONAME = "libvscphelper.so.$(LIB_MAJOR_VERSION)"

### Variables: ###

DESTDIR =

VSCPHELPER_OBJECTS =  libvscphelper.o \
	vscphelperlib.o \
	vscpremotetcpif.o \
	vscphelper.o \
	sockettcp.o \
	guid.o \
	crc.o \
	crc8.o \
	vscp_aes.o \
	vscpmd5.o \
	fastpbkdf2.o \
	vscpbase64.o

### Targets: ###

all: $(LIB_PLUS_VER) test lib

lib:	$(LIB_PLUS_VER)
	ar rcs libvscphelper.a libvscphelper.o

test:	test.o $(PROJOBJS)
	$(CXX) -I_vscp_common -I_vscp_common_general -o $@ test.o $(PROJOBJS) $(LDFLAGS) -L$(LIBDIRNAME)  $(EXTRALIBS)

# Build the Linux DL
$(LIB_PLUS_VER): $(VSCPHELPER_OBJECTS)
	$(CXX) -Wl,-soname,$(LIB_SONAME) -o $@ $(VSCPHELPER_OBJECTS) $(DLFLAGS) -L$(LIBDIRNAME) $(EXTRALIBS)

libvscphelper.o: libvscphelper.cpp libvscphelper.h
	$(CXX) $(CXXFLAGS) $(CPPFLAGS) -c libvscphelper.cpp -o $@

vscphelperlib.o: ../vscphelperlib.cpp ../vscphelperlib.h
	$(CXX) $(CXXFLAGS) $(CPPFLAGS) -c ../vscphelperlib.cpp -o $@

vscpremotetcpif.o: _vscp_common/vscpremotetcpif.cpp _vscp_common/vscpremotetcpif.h
	$(CXX) $(CXXFLAGS) $(CPPFLAGS) -c _vscp_common/vscpremotetcpif.cpp -o $@

vscphelper.o: _vscp_common/vscphelper.cpp _vscp_common/vscphelper.h
	$(CXX) $(CXXFLAGS) $(CPPFLAGS) -c _vscp_common/vscphelper.cpp -o $@

sockettcp.o: _vscp_common_general/sockettcp.c _vscp_common_general/sockettcp.h
	        $(CC) $(CFLAGS) $(CPPFLAGS) -c _vscp_common_general/sockettcp.c -o $@

guid.o: _vscp_common/guid.cpp _vscp_common/guid.h
	$(CXX) $(CXXFLAGS) $(CPPFLAGS) -c _vscp_common/guid.cpp -o $@

vscp_aes.o: _vscp_common_general/vscp_aes.c _vscp_common_general/vscp_aes.h
	$(CC) $(CFLAGS) -c _vscp_common_general/vscp_aes.c -o $@

crc.o: _vscp_common_general/crc.c _vscp_common_general/crc.h
	$(CC) $(CFLAGS) -c _vscp_common_general/crc.c -o $@

crc8.o: _vscp_common_general/crc8.c _vscp_common_general/crc8.h
	$(CC) $(CFLAGS) -c _vscp_common_general/crc8.c -o $@

vscpbase64.o: _vscp_common_general/vscpbase64.c _vscp_common_general/vscpbase64.h
	$(CC) $(CFLAGS) -c _vscp_common_general/vscpbase64.c -o $@

fastpbkdf2.o: _vscp_common_general/fastpbkdf2.c _vscp_common_general/fastpbkdf2.h
	$(CC) $(CFLAGS) -c _vscp_common_general/fastpbkdf2.c -o $@

vscpmd5.o: _vscp_common_general/vscpmd5.c _vscp_common_general/vscpmd5.h
	$(CC) $(CFLAGS) -c _vscp_common_general/vscpmd5.c -o $@

install: all
	$(INSTALL_PROGRAM) -d $(DESTDIR)$(libdir)
	$(STRIP) libvscphelper.so
	cp libvscphelper.so $(LIB_PLUS_VER)
	$(INSTALL_PROGRAM) $(LIB_PLUS_VER) $(DESTDIR)$(libdir)
	ln -fs $(libdir)/$(LIB_PLUS_VER) $(DESTDIR)$(libdir)/libvscphelper.so
	ln -fs $(libdir)/$(LIB_PLUS_VER) $(DESTDIR)$(libdir)/libvscphelper.so.$(LIB_MAJOR_VERSION)
	ln -fs $(libdir)/$(LIB_PLUS_VER) $(DESTDIR)$(libdir)/libvscphelper.so.$(LIB_MAJOR_VERSION).$(LIB_MINOR_VERSION)
	$(INSTALL_PROGRAM) ../vscphelperlib.h $(DESTDIR)$(includedir)
	ar rcs libvscphelper.a libvscphelper.o

uninstall:

install-strip: install

deb:    all
	echo "\n" | ./builddist.sh
	@mkdir -p ../../../../dist
	@mv *.deb ../../../../dist

clean:
	rm -rf ./.deps ./.pch
	rm -f ./*.o
	rm -f ./*.a
	rm -f ../common/*.o
	rm -f _vscp_common/*.o
	rm -f _vscp_common_general/*.o
	rm -f ../_vscp_common_general/*.o
	rm -f *.so
	rm -f libvscphelper.so
	rm -f libvscphelper.so.$(LIB_MAJOR_VERSION)
	rm -f libvscphelper.so.$(LIB_MAJOR_VERSION).$(LIB_MINOR_VERSION)
	rm -f libvscphelper.so.$(LIB_MAJOR_VERSION).$(LIB_MINOR_VERSION).$(LIB_RELEASE_VERSION)
	rm -f test

distclean: clean
	rm -f config.cache config.log config.status bk-deps bk-make-pch shared-ld-sh Makefile

$(ALWAYS_BUILD):  .FORCE

.FORCE:

# Include dependency info, if present:
-include .deps/*.d

.PHONY: all install uninstall clean distclean data .FORCE
